/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.27).
 * https://github.com/swagger-api/swagger-codegen Do not edit the class manually.
 */
package it.gov.pagopa.onboarding.workflow.controller;

import it.gov.pagopa.onboarding.workflow.dto.*;
import it.gov.pagopa.onboarding.workflow.dto.web.InitiativeWebDTO;
import it.gov.pagopa.onboarding.workflow.enums.ChannelType;
import jakarta.validation.Valid;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.data.web.PageableDefault;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.time.LocalDateTime;
import java.util.Locale;

/**
 * IdPay - Citizen Onboarding
 */

@RestController
@RequestMapping("/idpay/onboarding")
public interface OnboardingController {

    /* TODO: Servizi da aggiungere presenti sullo swagger e non lato codice:
        /onboarding/service/{serviceId}
        /onboarding/{initiativeId}/detail presente su web e puntato da IO tramite policy
        /user/initiative/status da sviluppare
     */

    /**
     * Returns the initiative details
     *
     * @param initiativeId
     * @RequestHeader acceptLanguage
     * @return
     */
    @GetMapping("/{initiativeId}/detail")
    ResponseEntity<InitiativeWebDTO> getInitiative(
            @PathVariable("initiativeId") String initiativeId,
            @RequestHeader(value = "Accept-Language", defaultValue = "it_IT") Locale acceptLanguage);

    /**
     * Returns the actual onboarding status
     *
     * @param initiativeId
     * @param userId
     * @return
     */
    @GetMapping("/{initiativeId}/{userId}/status")
    ResponseEntity<OnboardingStatusDTO> onboardingStatus(
            @PathVariable("initiativeId") String initiativeId, @PathVariable("userId") String userId);

    /**
     * Save the consents of PDND criteria and Self declaration list
     *
     * @param consentPutDTO
     * @param userId
     * @return
     */
    @PutMapping("/{userId}")
    ResponseEntity<Void> saveConsent(
            @RequestBody ConsentPutDTO consentPutDTO,
            @RequestHeader("X-Channel") ChannelType channel,
            @PathVariable("userId") String userId);

    // Servizi non utilizzati nel workflow di IO o WEB


    /**
     * Returns the onboarding status list
     *
     * @param initiativeId
     * @return
     */
    @GetMapping("/{initiativeId}")
    ResponseEntity<ResponseInitiativeOnboardingDTO> onboardingStatusList(
            @PathVariable("initiativeId") String initiativeId,
            @PageableDefault(size = 15, sort = "updateDate", direction = Sort.Direction.DESC) Pageable pageable,
            @RequestParam(required = false) String userId,
            @RequestParam(required = false) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME) LocalDateTime startDate,
            @RequestParam(required = false) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME) LocalDateTime endDate,
            @RequestParam(required = false) String status);

    /**
     * Deactivation onboarding
     *
     * @param body
     * @return
     */
    @DeleteMapping("/disable")
    ResponseEntity<Void> disableOnboarding(
            @Valid @RequestBody UnsubscribeBodyDTO body);

    /**
     * rollback onboarding
     *
     * @param initiativeId
     * @param userId
     * @return
     */
    @PutMapping("/rollback/{initiativeId}/{userId}")
    ResponseEntity<Void> rollback(
            @PathVariable("initiativeId") String initiativeId, @PathVariable("userId") String userId);

    @PutMapping("/{initiativeId}/{userId}/suspend")
    ResponseEntity<Void> suspend(@PathVariable("initiativeId") String initiativeId, @PathVariable("userId") String userId);

    @PutMapping("/{initiativeId}/{userId}/readmit")
    ResponseEntity<Void> readmit(@PathVariable("initiativeId") String initiativeId, @PathVariable("userId") String userId);

    @GetMapping("/{initiativeId}/{userId}/family")
    ResponseEntity<OnboardingFamilyDTO> familyUnitComposition(
            @PathVariable("initiativeId") String initiativeId, @PathVariable("userId") String userId);
}
